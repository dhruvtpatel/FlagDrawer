#BlueJ class context
comment0.target=SimpleCanvas
comment0.text=\r\n\ This\ is\ a\ stripped-down\ version\ of\ the\ Canvas\ class\ from\ the\r\n\ BlueJ\ team,\ retaining\ only\ the\ most\ fundamental\ features.\r\n\r\n\ @author\ BlueJ\ team\ with\ modifications\ by\ Gordon\ Royle\ (July\ 2003)\ and\ Rachel\ Cardell-Oliver\r\n\ @version\ Feb\ 2011\r\n
comment1.params=title\ width\ height\ autoRepaint
comment1.target=SimpleCanvas(java.lang.String,\ int,\ int,\ boolean)
comment1.text=\r\n\ Creates\ and\ displays\ a\ SimpleCanvas\ of\ the\ specified\ size\r\n\ with\ a\ white\ background.\ The\ client\ specifies\ whether\ repainting\r\n\ after\ a\ drawing\ command\ should\ be\ manual\ or\ automatic.\r\n\r\n\ @param\ \ \ title\ title\ for\ the\ window\r\n\ @param\ \ \ width\ the\ desired\ width\ of\ the\ SimpleCanvas\r\n\ @param\ \ \ height\ the\ desired\ height\ of\ the\ SimpleCanvas\r\n\ @param\ \ \ autoRepaint\ true\ for\ automatic\ repainting\r\n\r\n
comment10.params=newFont
comment10.target=void\ setFont(java.awt.Font)
comment10.text=\r\n\ Changes\ the\ font\ for\ subsequent\ String\r\n\ drawing\ on\ this\ SimpleCanvas.\r\n\r\n\ @param\ \ \ newFont\ the\ new\ Font\r\n
comment11.params=
comment11.target=java.awt.Font\ getFont()
comment11.text=\r\n\ Gets\ the\ font\ currently\ used\ for\r\n\ String\ drawing\ on\ this\ Canvas\r\n\ @return\ current\ font\ for\ canvas\r\n
comment12.params=text\ x\ y
comment12.target=void\ drawString(java.lang.String,\ int,\ int)
comment12.text=\r\n\ Draws\ the\ specified\ String\ at\ the\ specified\r\n\ location\ on\ this\ SimpleCanvas\r\n\ @param\ text\ String\ to\ write\ on\ the\ canvas\r\n\ @param\ x\ horizontal\ coordinate\ (from\ left)\ to\ place\ text\r\n\ @param\ y\ vertical\ coordinate\ (from\ top)\ to\ place\ text\r\n
comment13.params=autoRepaint
comment13.target=void\ setAutoRepaint(boolean)
comment13.text=\r\n\ Sets\ the\ repaint\ mode\ to\ either\ manual\ or\ automatic.\r\n\r\n\ @param\ \ \ autoRepaint\ automatic\ repainting\ if\ this\ is\ true\r\n
comment14.params=
comment14.target=void\ repaint()
comment14.text=\r\n\ If\ a\ SimpleCanvas\ does\ not\ automatically\ repaint\r\n\ after\ each\ drawing\ command,\ then\ this\ method\ can\ be\r\n\ used\ to\ cause\ a\ manual\ repaint.\r\n
comment15.params=millis
comment15.target=void\ wait(int)
comment15.text=\r\n\ Causes\ execution\ to\ pause\ for\ the\ specified\ amount\ of\ time.\r\n\ This\ is\ usually\ used\ to\ produce\ animations\ in\ an\ easy\r\n\ manner,\ by\ repeatedly\ drawing,\ pausing,\ and\ then\ redrawing\r\n\ an\ object.\r\n\ @param\ millis\ number\ of\ milliseconds\ to\ pause\ for\r\n
comment16.params=ml
comment16.target=void\ addMouseListener(java.awt.event.MouseListener)
comment16.text=\r\n\ listener\ to\ wait\ for\ mouse\ clicks\r\n\ @param\ ml\ the\ name\ of\ the\ mouse\ listener\r\n
comment2.params=title\ width\ height
comment2.target=SimpleCanvas(java.lang.String,\ int,\ int)
comment2.text=\r\n\ Creates\ and\ displays\ a\ SimpleCanvas\ with\ a\ white\ background\ and\r\n\ with\ automatic\ repainting\ after\ drawing\ commands.\r\n\r\n\ @param\ \ \ title\ title\ for\ the\ window\r\n\ @param\ \ \ width\ the\ desired\ width\ of\ the\ SimpleCanvas\r\n\ @param\ \ \ height\ the\ desired\ height\ of\ the\ SimpleCanvas\r\n\r\n
comment3.params=
comment3.target=SimpleCanvas()
comment3.text=\r\n\ Creates\ and\ displays\ a\ SimpleCanvas\ of\ size\ 400x400\ with\ the\r\n\ default\ title\ "SimpleCanvas"\ and\ with\ automatic\ repainting\r\n\ enabled.\r\n
comment4.params=x1\ y1\ x2\ y2
comment4.target=void\ drawLine(int,\ int,\ int,\ int)
comment4.text=\r\n\ Draws\ a\ line\ on\ the\ SimpleCanvas\ between\ two\ points.\r\n\r\n\ @param\ \ \ x1\ x-coordinate\ of\ the\ first\ point\r\n\ @param\ \ \ y1\ y-coordinate\ of\ the\ first\ point\r\n\ @param\ \ \ x2\ x-coordinate\ of\ the\ second\ point\r\n\ @param\ \ \ y2\ y-coordinate\ of\ the\ second\ point\r\n\r\n
comment5.params=xPoints\ yPoints\ nPoints
comment5.target=void\ drawPolygon(int[],\ int[],\ int)
comment6.params=x\ y\ w\ h\ start\ end
comment6.target=void\ drawArc(int,\ int,\ int,\ int,\ int,\ int)
comment7.params=x\ y\ d
comment7.target=void\ drawCircle(int,\ int,\ int)
comment8.params=newColour
comment8.target=void\ setForegroundColour(java.awt.Color)
comment8.text=\r\n\ Changes\ the\ colour\ for\ subsequent\r\n\ drawing\ on\ this\ SimpleCanvas.\r\n\r\n\ @param\ \ \ newColour\ the\ new\ drawing\ colour\r\n
comment9.params=
comment9.target=java.awt.Color\ getForegroundColour()
comment9.text=\r\n\ Gets\ the\ colour\ currently\ used\ for\r\n\ drawing\ on\ this\ SimpleCanvas.\r\n\ @return\ current\ foreground\ colour\r\n
numComments=17
